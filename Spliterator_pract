import java.util.ArrayList;
import java.util.Spliterator;
import java.util.stream.Stream;

public class SpliteratorDemo
{
    public static void main(String[] args)
    {
        // Create an array list for doubles.
        ArrayList<Integer> sd = new ArrayList<>();

        // Add values to the array list.
        sd.add(1);
        sd.add(2);
        sd.add(-3);
        sd.add(-4);
        sd.add(5);


        Stream<Integer> str = sd.stream();
        
        Spliterator<Integer> splitr1 = str.spliterator();
        
        System.out.println("estimate size : " + splitr1.estimateSize());
        
        System.out.println("exact size : " + splitr1.getExactSizeIfKnown());
        
        System.out.println(splitr1.hasCharacteristics(splitr1.characteristics()));

        System.out.println("Content of arraylist :");
        // forEachRemaining method
        splitr1.forEachRemaining((n) -> System.out.println(n));

        // Obtaining another  Stream to the array list.
        Stream<Integer> str1 = sd.stream();
        splitr1 = str1.spliterator();

        // trySplit() method
        Spliterator<Integer> splitr2 = splitr1.trySplit();

        // If splitr1 could be split, use splitr2 first.
        if(splitr2 != null) {
            System.out.println("Output from splitr2: ");
            splitr2.forEachRemaining((n) -> System.out.println(n));
        }

        // Now, use the splitr
        System.out.println("\nOutput from splitr1: ");
        splitr1.forEachRemaining((n) -> System.out.println(n));



    }
}
